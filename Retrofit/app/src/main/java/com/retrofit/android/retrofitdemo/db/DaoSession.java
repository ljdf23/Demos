package com.retrofit.android.retrofitdemo.db;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.retrofit.android.retrofitdemo.db.User;
import com.retrofit.android.retrofitdemo.db.Other;
import com.retrofit.android.retrofitdemo.db.PlainDetail;
import com.retrofit.android.retrofitdemo.db.Line;
import com.retrofit.android.retrofitdemo.db.PhoneAllLines;

import com.retrofit.android.retrofitdemo.db.UserDao;
import com.retrofit.android.retrofitdemo.db.OtherDao;
import com.retrofit.android.retrofitdemo.db.PlainDetailDao;
import com.retrofit.android.retrofitdemo.db.LineDao;
import com.retrofit.android.retrofitdemo.db.PhoneAllLinesDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig userDaoConfig;
    private final DaoConfig otherDaoConfig;
    private final DaoConfig plainDetailDaoConfig;
    private final DaoConfig lineDaoConfig;
    private final DaoConfig phoneAllLinesDaoConfig;

    private final UserDao userDao;
    private final OtherDao otherDao;
    private final PlainDetailDao plainDetailDao;
    private final LineDao lineDao;
    private final PhoneAllLinesDao phoneAllLinesDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        otherDaoConfig = daoConfigMap.get(OtherDao.class).clone();
        otherDaoConfig.initIdentityScope(type);

        plainDetailDaoConfig = daoConfigMap.get(PlainDetailDao.class).clone();
        plainDetailDaoConfig.initIdentityScope(type);

        lineDaoConfig = daoConfigMap.get(LineDao.class).clone();
        lineDaoConfig.initIdentityScope(type);

        phoneAllLinesDaoConfig = daoConfigMap.get(PhoneAllLinesDao.class).clone();
        phoneAllLinesDaoConfig.initIdentityScope(type);

        userDao = new UserDao(userDaoConfig, this);
        otherDao = new OtherDao(otherDaoConfig, this);
        plainDetailDao = new PlainDetailDao(plainDetailDaoConfig, this);
        lineDao = new LineDao(lineDaoConfig, this);
        phoneAllLinesDao = new PhoneAllLinesDao(phoneAllLinesDaoConfig, this);

        registerDao(User.class, userDao);
        registerDao(Other.class, otherDao);
        registerDao(PlainDetail.class, plainDetailDao);
        registerDao(Line.class, lineDao);
        registerDao(PhoneAllLines.class, phoneAllLinesDao);
    }
    
    public void clear() {
        userDaoConfig.clearIdentityScope();
        otherDaoConfig.clearIdentityScope();
        plainDetailDaoConfig.clearIdentityScope();
        lineDaoConfig.clearIdentityScope();
        phoneAllLinesDaoConfig.clearIdentityScope();
    }

    public UserDao getUserDao() {
        return userDao;
    }

    public OtherDao getOtherDao() {
        return otherDao;
    }

    public PlainDetailDao getPlainDetailDao() {
        return plainDetailDao;
    }

    public LineDao getLineDao() {
        return lineDao;
    }

    public PhoneAllLinesDao getPhoneAllLinesDao() {
        return phoneAllLinesDao;
    }

}
